<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	<aop:aspectj-autoproxy />
	<bean id="propertyConfigurer" class="com.zjlp.face.util.file.PropertiesUtil">
		<property name="ignoreResourceNotFound" value="true" /> 
		<property name="locations">
			<list>
			    <value>classpath:config/config.properties</value>
			    <value>classpath:config/cas.properties</value>
			    <value>classpath:config/withdrawConfig.properties</value>
			    <value>classpath:config/quartz.properties</value>
			    <value>classpath:config/payConfig.properties</value>
				<value>classpath:config/wxPayConfig.properties</value>
				<value>classpath:config/wechatDevInfoConfig.properties</value>
				<value>classpath:config/imgConfig.properties</value>
				<value>classpath:config/jobConfig.properties</value>
				<value>classpath:config/imConfig.properties</value>
				<value>classpath:config/metaSwitch.properties</value>
				<value>classpath:config/subbranchConfig.properties</value>
				<value>classpath:config/youqianConfig.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="1073741824"/>
		<property name="maxInMemorySize" value="409600000" />
	</bean>
	<!-- <import resource="classpath:jz-wechat.xml" /> -->
	<import resource="classpath:jz-datasource.xml" />
	
	<context:component-scan base-package="com.zjlp.face.web.server" />
	<context:component-scan base-package="com.zjlp.face.web.http.listener" />
		<context:component-scan base-package="com.zjlp.face.web.ctl" />
<!-- 	<context:component-scan base-package="com.zjlp.face.web.server.trade.payment.classify" /> -->
	
	
<!-- 	<context:component-scan base-package="com.zjlp.face.web.server" use-default-filters="false"> -->
<!-- 		<context:include-filter type="regex" expression="com.zjlp.face.web.server.*.*.dao.impl"/> -->
<!-- 		<context:include-filter type="regex" expression="com.zjlp.face.web.server.*.*.service.impl"/> -->
<!-- 		<context:include-filter type="regex" expression="com.zjlp.face.web.server.*.*.business.impl" /> -->
<!-- 		<context:include-filter type="regex" expression="com.zjlp.face.web.server.*.*.business"/> -->
<!-- 		<context:include-filter type="regex" expression="com.zjlp.face.web.server.*.*.producer"/> -->
<!-- 	</context:component-scan> -->
	<context:component-scan base-package="com.zjlp.face.web.component.metaq.producer" />
<!-- 	<context:component-scan base-package="com.zjlp.face.web.component"> -->
<!-- 	    <context:include-filter type="regex" expression="com.zjlp.face.web.component.metaq.producer"/> -->
<!-- 	</context:component-scan> -->

	<context:component-scan base-package="com.zjlp.face.web.job" />
	
	<bean id="wgjListHelper" class="com.zjlp.face.jredis.client.RedisListHelper">
		<constructor-arg value="common" type="java.lang.String"/>
	</bean>
	<bean id="wgjStringHelper" class="com.zjlp.face.jredis.client.RedisStringHelper">
		<constructor-arg value="common" type="java.lang.String"/>
	</bean>
	
	<bean id="redisLock" class="com.zjlp.face.jredis.client.lock.RedisLock">
		<constructor-arg value="common" type="java.lang.String"/>
	</bean>
	
	<bean id="wgjHashesHelper" class="com.zjlp.face.jredis.client.RedisHashesHelper">
		<constructor-arg value="common" type="java.lang.String"/>
	</bean>
<!-- 	<bean id="testTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"> -->
<!--    		<property name="dataSource" ref="dataSource"/> -->
<!--   		<property name="createTableOnStartup" value="false"/> -->
<!-- 	</bean> -->
	
	<import resource="classpath:consumer.xml" />
<!-- 	<import resource="spring-persistence-quartz.xml" /> -->
	<import resource="spring-dao.xml" />
	<import resource="spring-aop.xml" />
	<import resource="spring-solr.xml" />	
</beans> 