<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjlp.face.web.mapper.AccountOperationRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zjlp.face.web.server.trade.account.domain.AccountOperationRecord" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="SERIAL_NUMBER" property="serialNumber" jdbcType="VARCHAR" />
    <result column="FROM_ACCOUNT_ID" property="fromAccountId" jdbcType="BIGINT" />
    <result column="TO_ACCOUNT_ID" property="toAccountId" jdbcType="BIGINT" />
    <result column="OPERATION_AMOUNT" property="operationAmount" jdbcType="BIGINT" />
    <result column="FROM_AMOUNT_BEFORE" property="fromAmountBefore" jdbcType="BIGINT" />
    <result column="FROM_COMMISSION_BEFORE" property="fromCommissionBefore" jdbcType="BIGINT" />
    <result column="FROM_AMOUNT_AFTER" property="fromAmountAfter" jdbcType="BIGINT" />
    <result column="FROM_COMMISSION_AFTER" property="fromCommissionAfter" jdbcType="BIGINT" />
    <result column="TO_AMOUNT_BEFORE" property="toAmountBefore" jdbcType="BIGINT" />
    <result column="TO_COMMISSION_BEFORE" property="toCommissionBefore" jdbcType="BIGINT" />
    <result column="TO_AMOUNT_AFTER" property="toAmountAfter" jdbcType="BIGINT" />
    <result column="TO_COMMISSION_AFTER" property="toCommissionAfter" jdbcType="BIGINT" />
    <result column="BANK_CARD_ID" property="bankCardId" jdbcType="BIGINT" />
    <result column="BANK_CARD" property="bankCard" jdbcType="VARCHAR" />
    <result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
    <result column="OPERATION_TYPE" property="operationType" jdbcType="INTEGER" />
    <result column="WITHDRAWAL_STATES" property="withdrawalStates" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, SERIAL_NUMBER, FROM_ACCOUNT_ID, TO_ACCOUNT_ID, OPERATION_AMOUNT, FROM_AMOUNT_BEFORE, 
    FROM_COMMISSION_BEFORE, FROM_AMOUNT_AFTER, FROM_COMMISSION_AFTER, TO_AMOUNT_BEFORE, 
    TO_COMMISSION_BEFORE, TO_AMOUNT_AFTER, TO_COMMISSION_AFTER, BANK_CARD_ID, BANK_CARD, 
    BANK_NAME, OPERATION_TYPE, WITHDRAWAL_STATES, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account_operation_record
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from account_operation_record
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zjlp.face.web.server.trade.account.domain.AccountOperationRecord" >
   	<selectKey keyProperty="id" resultType="long" order="AFTER">
		SELECT
		LAST_INSERT_ID();
	</selectKey>
    insert into account_operation_record (ID, SERIAL_NUMBER, FROM_ACCOUNT_ID, 
      TO_ACCOUNT_ID, OPERATION_AMOUNT, FROM_AMOUNT_BEFORE, 
      FROM_COMMISSION_BEFORE, FROM_AMOUNT_AFTER, FROM_COMMISSION_AFTER, 
      TO_AMOUNT_BEFORE, TO_COMMISSION_BEFORE, TO_AMOUNT_AFTER, 
      TO_COMMISSION_AFTER, BANK_CARD_ID, BANK_CARD, 
      BANK_NAME, OPERATION_TYPE, WITHDRAWAL_STATES, 
      CREATE_TIME, UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{serialNumber,jdbcType=VARCHAR}, #{fromAccountId,jdbcType=BIGINT}, 
      #{toAccountId,jdbcType=BIGINT}, #{operationAmount,jdbcType=BIGINT}, #{fromAmountBefore,jdbcType=BIGINT}, 
      #{fromCommissionBefore,jdbcType=BIGINT}, #{fromAmountAfter,jdbcType=BIGINT}, #{fromCommissionAfter,jdbcType=BIGINT}, 
      #{toAmountBefore,jdbcType=BIGINT}, #{toCommissionBefore,jdbcType=BIGINT}, #{toAmountAfter,jdbcType=BIGINT}, 
      #{toCommissionAfter,jdbcType=BIGINT}, #{bankCardId,jdbcType=BIGINT}, #{bankCard,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{operationType,jdbcType=INTEGER}, #{withdrawalStates,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zjlp.face.web.server.trade.account.domain.AccountOperationRecord" >
   	<selectKey keyProperty="id" resultType="long" order="AFTER">
		SELECT
		LAST_INSERT_ID();
	</selectKey>
    insert into account_operation_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="serialNumber != null" >
        SERIAL_NUMBER,
      </if>
      <if test="fromAccountId != null" >
        FROM_ACCOUNT_ID,
      </if>
      <if test="toAccountId != null" >
        TO_ACCOUNT_ID,
      </if>
      <if test="operationAmount != null" >
        OPERATION_AMOUNT,
      </if>
      <if test="fromAmountBefore != null" >
        FROM_AMOUNT_BEFORE,
      </if>
      <if test="fromCommissionBefore != null" >
        FROM_COMMISSION_BEFORE,
      </if>
      <if test="fromAmountAfter != null" >
        FROM_AMOUNT_AFTER,
      </if>
      <if test="fromCommissionAfter != null" >
        FROM_COMMISSION_AFTER,
      </if>
      <if test="toAmountBefore != null" >
        TO_AMOUNT_BEFORE,
      </if>
      <if test="toCommissionBefore != null" >
        TO_COMMISSION_BEFORE,
      </if>
      <if test="toAmountAfter != null" >
        TO_AMOUNT_AFTER,
      </if>
      <if test="toCommissionAfter != null" >
        TO_COMMISSION_AFTER,
      </if>
      <if test="bankCardId != null" >
        BANK_CARD_ID,
      </if>
      <if test="bankCard != null" >
        BANK_CARD,
      </if>
      <if test="bankName != null" >
        BANK_NAME,
      </if>
      <if test="operationType != null" >
        OPERATION_TYPE,
      </if>
      <if test="withdrawalStates != null" >
        WITHDRAWAL_STATES,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="fromAccountId != null" >
        #{fromAccountId,jdbcType=BIGINT},
      </if>
      <if test="toAccountId != null" >
        #{toAccountId,jdbcType=BIGINT},
      </if>
      <if test="operationAmount != null" >
        #{operationAmount,jdbcType=BIGINT},
      </if>
      <if test="fromAmountBefore != null" >
        #{fromAmountBefore,jdbcType=BIGINT},
      </if>
      <if test="fromCommissionBefore != null" >
        #{fromCommissionBefore,jdbcType=BIGINT},
      </if>
      <if test="fromAmountAfter != null" >
        #{fromAmountAfter,jdbcType=BIGINT},
      </if>
      <if test="fromCommissionAfter != null" >
        #{fromCommissionAfter,jdbcType=BIGINT},
      </if>
      <if test="toAmountBefore != null" >
        #{toAmountBefore,jdbcType=BIGINT},
      </if>
      <if test="toCommissionBefore != null" >
        #{toCommissionBefore,jdbcType=BIGINT},
      </if>
      <if test="toAmountAfter != null" >
        #{toAmountAfter,jdbcType=BIGINT},
      </if>
      <if test="toCommissionAfter != null" >
        #{toCommissionAfter,jdbcType=BIGINT},
      </if>
      <if test="bankCardId != null" >
        #{bankCardId,jdbcType=BIGINT},
      </if>
      <if test="bankCard != null" >
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null" >
        #{operationType,jdbcType=INTEGER},
      </if>
      <if test="withdrawalStates != null" >
        #{withdrawalStates,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjlp.face.web.server.trade.account.domain.AccountOperationRecord" >
    update account_operation_record
    <set >
      <if test="serialNumber != null" >
        SERIAL_NUMBER = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="fromAccountId != null" >
        FROM_ACCOUNT_ID = #{fromAccountId,jdbcType=BIGINT},
      </if>
      <if test="toAccountId != null" >
        TO_ACCOUNT_ID = #{toAccountId,jdbcType=BIGINT},
      </if>
      <if test="operationAmount != null" >
        OPERATION_AMOUNT = #{operationAmount,jdbcType=BIGINT},
      </if>
      <if test="fromAmountBefore != null" >
        FROM_AMOUNT_BEFORE = #{fromAmountBefore,jdbcType=BIGINT},
      </if>
      <if test="fromCommissionBefore != null" >
        FROM_COMMISSION_BEFORE = #{fromCommissionBefore,jdbcType=BIGINT},
      </if>
      <if test="fromAmountAfter != null" >
        FROM_AMOUNT_AFTER = #{fromAmountAfter,jdbcType=BIGINT},
      </if>
      <if test="fromCommissionAfter != null" >
        FROM_COMMISSION_AFTER = #{fromCommissionAfter,jdbcType=BIGINT},
      </if>
      <if test="toAmountBefore != null" >
        TO_AMOUNT_BEFORE = #{toAmountBefore,jdbcType=BIGINT},
      </if>
      <if test="toCommissionBefore != null" >
        TO_COMMISSION_BEFORE = #{toCommissionBefore,jdbcType=BIGINT},
      </if>
      <if test="toAmountAfter != null" >
        TO_AMOUNT_AFTER = #{toAmountAfter,jdbcType=BIGINT},
      </if>
      <if test="toCommissionAfter != null" >
        TO_COMMISSION_AFTER = #{toCommissionAfter,jdbcType=BIGINT},
      </if>
      <if test="bankCardId != null" >
        BANK_CARD_ID = #{bankCardId,jdbcType=BIGINT},
      </if>
      <if test="bankCard != null" >
        BANK_CARD = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null" >
        OPERATION_TYPE = #{operationType,jdbcType=INTEGER},
      </if>
      <if test="withdrawalStates != null" >
        WITHDRAWAL_STATES = #{withdrawalStates,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjlp.face.web.server.trade.account.domain.AccountOperationRecord" >
    update account_operation_record
    set SERIAL_NUMBER = #{serialNumber,jdbcType=VARCHAR},
      FROM_ACCOUNT_ID = #{fromAccountId,jdbcType=BIGINT},
      TO_ACCOUNT_ID = #{toAccountId,jdbcType=BIGINT},
      OPERATION_AMOUNT = #{operationAmount,jdbcType=BIGINT},
      FROM_AMOUNT_BEFORE = #{fromAmountBefore,jdbcType=BIGINT},
      FROM_COMMISSION_BEFORE = #{fromCommissionBefore,jdbcType=BIGINT},
      FROM_AMOUNT_AFTER = #{fromAmountAfter,jdbcType=BIGINT},
      FROM_COMMISSION_AFTER = #{fromCommissionAfter,jdbcType=BIGINT},
      TO_AMOUNT_BEFORE = #{toAmountBefore,jdbcType=BIGINT},
      TO_COMMISSION_BEFORE = #{toCommissionBefore,jdbcType=BIGINT},
      TO_AMOUNT_AFTER = #{toAmountAfter,jdbcType=BIGINT},
      TO_COMMISSION_AFTER = #{toCommissionAfter,jdbcType=BIGINT},
      BANK_CARD_ID = #{bankCardId,jdbcType=BIGINT},
      BANK_CARD = #{bankCard,jdbcType=VARCHAR},
      BANK_NAME = #{bankName,jdbcType=VARCHAR},
      OPERATION_TYPE = #{operationType,jdbcType=INTEGER},
      WITHDRAWAL_STATES = #{withdrawalStates,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>