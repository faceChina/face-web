<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjlp.face.web.mapper.FavoritesMapper" >
  <resultMap id="BaseResultMap" type="com.zjlp.face.web.server.user.favorites.domain.Favorites" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="REMOTE_TYPE" property="remoteType" jdbcType="INTEGER" />
    <result column="REMOTE_ID" property="remoteId" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="BaseDtoResultMap" type="com.zjlp.face.web.server.user.favorites.domain.dto.FavoritesDto" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="REMOTE_TYPE" property="remoteType" jdbcType="INTEGER" />
    <result column="REMOTE_ID" property="remoteId" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="REMOTE_PIC_URL" property="remotePicUrl" jdbcType="VARCHAR"/>
    <result column="REMOTE_PRICE" property="remotePrice" jdbcType="BIGINT"/>
    <result column="REMOTE_STATUS" property="remoteStauts" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, REMOTE_TYPE, REMOTE_ID,  STATUS, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from favorites
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from favorites
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zjlp.face.web.server.user.favorites.domain.Favorites" >
    insert into favorites (ID, USER_ID, REMOTE_TYPE, 
      REMOTE_ID, STATUS, 
      CREATE_TIME, UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{remoteType,jdbcType=INTEGER}, 
      #{remoteId,jdbcType=VARCHAR},  #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zjlp.face.web.server.user.favorites.domain.Favorites" >
  	<selectKey keyProperty="id" resultType="long" order="AFTER">
		SELECT
		LAST_INSERT_ID();
	</selectKey>
    insert into favorites
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="remoteType != null" >
        REMOTE_TYPE,
      </if>
      <if test="remoteId != null" >
        REMOTE_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="remoteType != null" >
        #{remoteType,jdbcType=INTEGER},
      </if>
      <if test="remoteId != null" >
        #{remoteId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjlp.face.web.server.user.favorites.domain.Favorites" >
    update favorites
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="remoteType != null" >
        REMOTE_TYPE = #{remoteType,jdbcType=INTEGER},
      </if>
      <if test="remoteId != null" >
        REMOTE_ID = #{remoteId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjlp.face.web.server.user.favorites.domain.Favorites" >
    update favorites
    set USER_ID = #{userId,jdbcType=BIGINT},
      REMOTE_TYPE = #{remoteType,jdbcType=INTEGER},
      REMOTE_ID = #{remoteId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="countFavorites" parameterType="com.zjlp.face.web.server.user.favorites.domain.Favorites" resultType="java.lang.Integer">
  	SELECT COUNT(1) FROM (
  		SELECT
			temp.remote_status as REMOTE_STATUS
		FROM
			favorites as f
		LEFT JOIN 
		(
		select favorites.ID as fid, CASE favorites.REMOTE_TYPE 
		WHEN 1 THEN (SELECT `STATUS` FROM good WHERE good.id = favorites.REMOTE_ID)
		WHEN 2 then (SELECT `STATUS` FROM shop WHERE shop.`NO` = favorites.REMOTE_ID)
		WHEN 3 then (SELECT `STATUS` FROM subbranch WHERE subbranch.ID = favorites.REMOTE_ID)
		END AS remote_status
		from favorites
		) as temp on (f.id = temp.fid)
		WHERE
			f.USER_ID = #{userId}
		AND f.REMOTE_TYPE IN <foreach collection="remoteTypes" open="(" separator="," close=")" item="remoteType">
			#{remoteType}
		</foreach>
		<if test="status == 0">
			AND temp.remote_status != 1
		</if>
		AND STATUS = 1
  	) AS a
  </select>
  
  <select id="findFavoritesPage" parameterType="java.util.Map" resultMap="BaseDtoResultMap">
	SELECT
		f.*, temp.remote_status as REMOTE_STATUS
	FROM
		favorites as f
	LEFT JOIN 
	(
	select favorites.ID as fid, CASE favorites.REMOTE_TYPE 
	WHEN 1 THEN (SELECT `STATUS` FROM good WHERE good.id = favorites.REMOTE_ID)
	WHEN 2 then (SELECT `STATUS` FROM shop WHERE shop.`NO` = favorites.REMOTE_ID)
	WHEN 3 then (SELECT `STATUS` FROM subbranch WHERE subbranch.ID = favorites.REMOTE_ID)
	END AS remote_status
	from favorites
	) as temp on (f.id = temp.fid)
	WHERE
		f.USER_ID = #{userId}
	AND f.REMOTE_TYPE IN <foreach collection="remoteTypes" open="(" separator="," close=")" item="remoteType">
		#{remoteType}
	</foreach>
	<if test="status == 0">
		AND temp.remote_status != 1
	</if>
	AND STATUS = 1
	ORDER BY f.CREATE_TIME DESC
	LIMIT #{start}, ${pageSize}
  </select>
  
  <select id="getFavorites" resultMap="BaseResultMap">
  	SELECT
		<include refid="Base_Column_List" />
	FROM
		favorites
	WHERE
		USER_ID = #{userId}
	AND REMOTE_TYPE = #{remoteType}
	AND REMOTE_ID = #{remoteId}
  </select>
  <update id="updateFavoriteByIdAndUserId" parameterType="com.zjlp.face.web.server.user.favorites.domain.Favorites">
  	update favorites
    <set >
      <if test="remoteType != null" >
        REMOTE_TYPE = #{remoteType,jdbcType=INTEGER},
      </if>
      <if test="remoteId != null" >
        REMOTE_ID = #{remoteId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT} and USER_ID = #{userId}
  </update>
  
  <update id="updateFavoritesStatusBatch">
  	UPDATE favorites 
  	SET STATUS = #{status}
  	WHERE ID IN <foreach collection="ids" open="(" separator="," close=")" item="id">
  		#{id}
  	</foreach>
  	AND USER_ID = #{userId}
  </update>
  
  <select id="findInvalideFavorite">
  	SELECT
		<include refid="Base_Column_List"/>
	FROM
		favorites
	WHERE
		USER_ID = #{userId}
	AND STATUS = 1
	AND REMOTE_TYPE IN <foreach collection="remoteTypes" open="(" separator="," close=")" item="remoteType">
		#{remoteType}
	</foreach>
  </select>
  <select id="findFavoritesGoods" resultMap="BaseResultMap">
    SELECT
		<include refid="Base_Column_List" />
	FROM
		favorites
	WHERE
	REMOTE_TYPE = #{remoteType}
	AND REMOTE_ID = #{remoteId}
	AND STATUS = 1
  </select>
</mapper>