<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>face-web</display-name>

		<!-- 以下3项参数与log4j的配置相关 -->
		<context-param>
			<param-name>webAppRootKey</param-name>
			<param-value>face-web.root</param-value>
		</context-param>
		<context-param>
			<param-name>log4jConfigLocation</param-name>
			<param-value>/WEB-INF/config/log4j.properties</param-value>
		</context-param>
		<context-param>
			<param-name>log4jRefreshInterval</param-name>
			<param-value>15000</param-value>
		</context-param>
		<listener>
			<listener-class>
				org.springframework.web.util.Log4jConfigListener
			</listener-class>
		</listener>
		<!-- redis -->
 	    <listener>
			<listener-class>com.zjlp.face.jredis.RedisInitializeListener</listener-class>
		</listener>
		
		<!-- 解决中文乱码问题 -->
		<filter>    
		    <filter-name>Character Encoding</filter-name>    
		    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>    
		    <init-param>    
		        <param-name>encoding</param-name>    
		        <param-value>UTF-8</param-value>    
		    </init-param>    
		</filter>    
		<filter-mapping>    
		    <filter-name>Character Encoding</filter-name>    
		    <url-pattern>/*</url-pattern>    
		</filter-mapping>
		
		<!-- 配置登录验证码过滤器  顺序必须配置在spring security之前 -->
		<filter>
			<filter-name>loginCaptchaFilter</filter-name>
			<filter-class> com.zjlp.face.web.http.filter.LoginCaptchaFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>loginCaptchaFilter</filter-name>
			<url-pattern>/j_spring_security_check</url-pattern>
		</filter-mapping>
		
		<!-- 配置基础图片路径加载过滤器 -->
		<filter>
			<filter-name>imagePathFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.ImagePathFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>imagePathFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
		
		
		<!-- spring security -->
		<filter>
			<filter-name>springSecurityFilterChain</filter-name>
			<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>springSecurityFilterChain</filter-name>
			<url-pattern>/*</url-pattern>
			<dispatcher>REQUEST</dispatcher>  
      		<dispatcher>FORWARD</dispatcher>  
		</filter-mapping>
		
		<!-- 解决app session过期 （userId不存在）-->
		<filter>
			<filter-name>assistantSessionFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.AssistantSessionFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>assistantSessionFilter</filter-name>
			<url-pattern>/assistant/ass/*</url-pattern>
		</filter-mapping>
		
		<!-- spring root context -->
		<context-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:spring-beans.xml
				classpath:spring-security-cas.xml
			</param-value>
		</context-param>
		<listener>
			<listener-class>
				org.springframework.web.context.ContextLoaderListener
			</listener-class>
		</listener>
		<!-- 图片路径加载监听器 -->
		 <listener>
			<listener-class>com.zjlp.face.web.http.listener.ImagePathListener</listener-class>
		</listener>
		<listener>    
        	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>    
		</listener>
		<filter>
			<filter-name>encodingFilter</filter-name>
			<filter-class>
				org.springframework.web.filter.CharacterEncodingFilter
			</filter-class>
			<init-param>
				<param-name>encoding</param-name>
				<param-value>UTF-8</param-value>
			</init-param>
			<init-param>
				<param-name>forceEncoding</param-name>
				<param-value>true</param-value>
			</init-param>
		</filter>
		<filter-mapping>
			<filter-name>encodingFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
		
	
		<filter>
			<filter-name>wapFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.WapFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>wapFilter</filter-name>
			<url-pattern>/wap/*</url-pattern>
		</filter-mapping> 
		
		<!-- 推广Filter 顺序应在最后 -->
		<filter>
			<filter-name>popularizeFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.PopularizeFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>popularizeFilter</filter-name>
			<url-pattern>/wap/*</url-pattern>
		</filter-mapping> 
		
		<!-- 分享Filter -->
		<filter>
			<filter-name>subbranchFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.SubbranchFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>subbranchFilter</filter-name>
			<url-pattern>/wap/*</url-pattern>
		</filter-mapping>
		
		<!-- 店铺名称 -->
		<filter>
			<filter-name>subbranchNameFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.SubbranchNameFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>subbranchNameFilter</filter-name>
			<url-pattern>/wap/*</url-pattern>
		</filter-mapping>
		

		<filter>
			<filter-name>LoadingFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.LoadingFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>LoadingFilter</filter-name>
			<url-pattern>/wap/*</url-pattern>
		</filter-mapping>
		
		<filter>
			<filter-name>WechatFilter</filter-name>
			<filter-class>com.zjlp.face.web.http.filter.WechatFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>WechatFilter</filter-name>
			<url-pattern>/wap/*</url-pattern>
		</filter-mapping>
		

		
		<!-- spring mvc -->
		<servlet>
			<servlet-name>dispatcherServlet</servlet-name>
			<servlet-class>
				org.springframework.web.servlet.DispatcherServlet
			</servlet-class>
			<init-param>
				<param-name>contextConfigLocation</param-name>
				<param-value>classpath:spring-servlet.xml</param-value>
			</init-param>
			<load-on-startup>2</load-on-startup>
		</servlet>
		<servlet-mapping>
			<servlet-name>dispatcherServlet</servlet-name>
			<url-pattern>*.htm</url-pattern>
			<url-pattern>*.json</url-pattern>
			<!-- 生成新图片拦截 -->
			<url-pattern>/qrcimg/*</url-pattern>
		</servlet-mapping>
				<!-- IM Servlet -->
		<servlet>
			<servlet-name>Jabber HTTP Binding Servlet</servlet-name>
			<servlet-class>org.jabber.JabberHTTPBind.JHBServlet</servlet-class>
			<!-- 
			<init-param>
				<param-name>debug</param-name>
				<param-value>1</param-value>
			</init-param>
			 -->
		</servlet>
		<servlet-mapping>
			<servlet-name>Jabber HTTP Binding Servlet</servlet-name>
			<url-pattern>/JHB/</url-pattern>
		</servlet-mapping>
		<!--友钱注册设备信息 begin-->
		<servlet>
		  <servlet-name>registerDeviceInfo</servlet-name>
		  <servlet-class>com.zjlp.face.web.http.open.servlet.RegisterDeviceInfoSevlet</servlet-class>
		
		</servlet>
		<servlet-mapping>
		   <servlet-name>registerDeviceInfo</servlet-name>  
           <url-pattern>/registerDeviceInfo</url-pattern>
		</servlet-mapping>
		<!--友钱注册设备信息 end-->
		<welcome-file-list>
			<welcome-file>/index.htm</welcome-file>
		</welcome-file-list>
	</web-app>